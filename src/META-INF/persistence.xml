<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="PU_Control"
		transaction-type="RESOURCE_LOCAL">
		<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<!-- <provider>org.hibernate.ejb.HibernatePersistence</provider> -->
		<!-- <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider> -->
		<class>ctrl.entity.AgentMsg</class>
		<properties>

			<property name="javax.persistence.jdbc.driver"
				value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url"
				value="jdbc:mysql://localhost:3306/ControlData?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8" />

			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="Kamarov" />

			<!-- 这里表示的 功能是： 自动创建|更新|验证数据库表结构。 面的需求建议set value="none"。里面可以设置的几个参数： 
				validate: 每次加载hibernate时，验证创建数据库表 数据库中的表进行比较，不会创建新 表，但是会插入新值。 create: 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新 
				次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。 create-drop:每次加载时根据entity生成表，sessionFactory一结束就删除表，开发前期建表时采用 
				update: 最常用的属性 hibernate时根据model类会自动建立起表的结构（前提是先建立 好数据库），以后加载hibernate时根据 
				model类自动更新表结构，即使表结构改变了但表中的行仍然 存在不会 。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用 第一次运行起来后才会. 
				开发后期使用。 -->

			<!-- <property name="hibernate.show_sql" value="true" /> <property name="hibernate.format_sql" 
				value="true" /> <property name="hibernate.hbm2ddl.auto" value="none" /> -->

		<property name="eclipselink.ddl-generation" value="none"/> 
			<property name="eclipselink.ddl-generation.output-mode"
				value="database" />

		</properties>
	</persistence-unit>
</persistence>
